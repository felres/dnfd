<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_fl_topleft</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>obj_fl_component</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Properties
event_inherited();
value = "";

// inputdog values
text = "1";
input = -1; // string like "left"
gamepad = false;
selected = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Component step event

event_inherited();
if(on_release &amp;&amp; hover) {
    event_user(3);
}

/*obj*/ var INPUT_MANAGER = inputdog_find_inputmanager_child_by_player(global.editPlayerSlot);

if(not gamepad)
{
    text = inputdog_get_keyboard_string(ds_map_find_value(INPUT_MANAGER.customKeys,input));
}
else
{
    text = inputdog_get_gamepad_string( ds_map_find_value(INPUT_MANAGER.customGamepadInputs,input));
}

if(selected)
{
    var DONE = false;
    if(gamepad)
    {
            var GAMEPAD_DOWN = inputdog_get_gamepad_input_down(INPUT_MANAGER.gamepadSlot, INPUT_MANAGER.directInput);
            if(GAMEPAD_DOWN != -1)
            {
                ds_map_replace(INPUT_MANAGER.customGamepadInputs,input,
                    GAMEPAD_DOWN);
                    DONE = true;
            }
    }
    else
    {
        if(keyboard_check_pressed(vk_anykey))
        {
            var k = keyboard_key; //keyboard_lastkey;
            ds_map_replace(INPUT_MANAGER.customKeys,input, k);
            print("New key: "+string(k));
            DONE = true;
        }
    }
    
    if(DONE)
    {
        selected = false;
    }   
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// change value
if(selected)
    value = "???";
else
    value = text;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Perform action

event_inherited();
if(disabled) {exit;}

with(obj_fl_input_button)
    selected = false;
selected = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>1</PhysicsObjectDensity>
  <PhysicsObjectRestitution>1</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>1</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>1</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>2</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
