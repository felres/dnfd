<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_pathfindable</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Properties
event_inherited();

debug = true&amp;&amp;global.debug;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Search for random paths

if (path_position == 1)
{
    path_status = 3 /* 0=no path set, 1=looking for path, 2=on path, 3=path finished */
    path_position = 0
}
if (path_status == 0 or path_status == 3)
{
    find_path(floor(x/obj_pathfinding.cell_width), // grid I am in now
                floor(y/obj_pathfinding.cell_height), 
                irandom(35)+1, // grid I want to go to
                irandom(35)+1,
                id)
    path_status = 1 /* 0=no path set, 1=looking for path, 2=on path, 3=path finished */
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="20">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// PATH FOUND CALLBACK

//show_debug_message("CAN I GET INTO :"+string(wasat_x)+"a"+string(wasat_y)+"b"+string(goto_x)+"c"+string(goto_y))
//show_debug_message("Pathididi :"+string(obj_pathfinding_manager.pathfinding_database[? string(wasat_x)+"a"+string(wasat_y)+"b"+string(goto_x)+"c"+string(goto_y)]))
if (path_exists(my_path)){path_delete(my_path)}
my_path = path_duplicate(obj_pathfinding_manager.pathfinding_database[? string(wasat_x)+"a"+string(wasat_y)+"b"+string(goto_x)+"c"+string(goto_y)])
path_start(my_path,1,path_action_stop,true)
path_status = 2 /* 0=no path set, 1=looking for path, 2=on path, 3=path finished */

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw yellow circle

draw_set_colour(c_yellow)
draw_circle(x,y,12,false)

if(debug)
{
    if( path_exists(my_path) )
    {
        for(var i = 0; i &lt; path_get_number(my_path); i++)
        {
            var xx = path_get_point_x(my_path, i);
            var yy = path_get_point_y(my_path, i);
            draw_set(1, c_white, fnt_mono);
            draw_circle(xx, yy, 2.5, false);
            draw_text_outlined(xx, yy, string(i), c_white, c_black);
            if(i&gt;0)
            {
                var lx = path_get_point_x(my_path, i-1);
                var ly = path_get_point_y(my_path, i-1);
                draw_line_width(lx, ly, xx, yy, 2);
            }
            draw_set();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
