<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Put all scripts in a ds_list

//x = view_xview + view_wview/2;
//y = view_yview + view_hview/2;

scripts = ds_list_create();

//asset_get_index("");
var firstScript = initiateGame;
var readingScripts = true;
for(var i = firstScript; readingScripts; i++)
{    
    if(script_exists(i))
    {
        var sname = script_get_name(i);
        
        if(tmc_string_starts_with(sname, "Ease", true))
        {
            print(string(i)+". "+sname + " is an Ease script!");
            ds_list_add(scripts, i);
        }
    }
    else
    {
        print("This is NOT a script!");
        readingScripts = false;
    }
}

// animation
inputvalue = 0;  //moves to inputmax
outputmin = 0;
outputmax = 100;
inputmax = 150;
last_x = 0;
last_y = 0;

inputstep = 2; // how much to increment inputvalue
returnvalue = 0;

// navigation
active = false;
index_selected = 0;
str = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// browser through sounds


str = "Navigate curves with left/right.";
str += "#Press space to animate.";
str += "#Curve ["+string(index_selected)+"] selected: " + script_get_name(ds_list_find_value(scripts, index_selected));


var next_audio = keyboard_check_pressed(vk_right);
var prev_audio = keyboard_check_pressed(vk_left);
var play_audio = keyboard_check_pressed(vk_space);

if(prev_audio &amp;&amp; (index_selected==0))
    audio_play_soundy(sndInterfaceHollow, 1, false, 1, 1);

if(next_audio &amp;&amp; (index_selected==ds_list_size(scripts)-1))
    audio_play_soundy(sndInterfaceHollow, 1, false, 1, 1);

if(next_audio) index_selected++;
if(prev_audio) index_selected--;
index_selected = clamp(index_selected, 0, ds_list_size(scripts)-1);

if(next_audio || prev_audio)
    audio_play_soundy(sndInterface1, 1, false, 1, 1);

if(play_audio)
{
    // start animation
    audio_play_soundy(sndInterface2, 1, false, 1, 1);
    active = true;
    inputvalue = 0;
}
    
if(active)
{
    inputvalue += inputstep;
    inputvalue = clamp(inputvalue, 0, inputmax);
    if(inputvalue == inputmax)
        active = false;
    returnvalue = script_execute(ds_list_find_value(scripts, index_selected), inputvalue, outputmin, outputmax, inputmax);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var size = 2;

// back
var c = c_gray;
draw_set(0.3);
draw_rectangle_colour(x, y, x+(inputmax*size), y-(outputmax*size), c, c, c, c, false);
draw_set();
// x axis
draw_line_width_colour(x, y, x+(inputmax*size), y, 3, c_black, c_black);
// y axis
draw_line_width_colour(x, y, x, y-(outputmax*size), 3, c_black, c_black);

var current_x = x+inputvalue*size;
var current_y = y-returnvalue*size;
//draw anim line
for(var i = 1; i &lt; inputmax; i+=1)
{
    draw_set(0.5);
    var rv = script_execute(ds_list_find_value(scripts, index_selected), i, outputmin, outputmax, inputmax);
    var rv2 = script_execute(ds_list_find_value(scripts, index_selected), i-1, outputmin, outputmax, inputmax);
    draw_line_width_colour(x+(i-1)*size,
                            y-(rv2)*size, 
                            x+i*size,
                            y-(rv)*size, 
                            1.5, c_lime, c_lime);
    draw_set(1);
}

// current point
draw_circle_colour(current_x, current_y, 5, c_aqua, c_fuchsia, false);
draw_circle_colour(current_x, current_y, 5, c_white, c_white, true);

draw_set(1, c_white, 0, fa_left, fa_top);
draw_text_outlined(x, y + 28, str, c_white, c_black);

// circle anim
var xx = x + 420;
var yy = y - 100;
var rmin = 20;
var rmax = 60;
var r = lerp(rmin, rmax, returnvalue/outputmax);
draw_set(0.8);
draw_circle(xx, yy, r, false);
draw_set(1, merge_colour(c_lime, c_gray, 0.3));
draw_circle(xx, yy, rmin, true);
draw_circle(xx, yy, rmax, true);


draw_set();

//last_x = current_x;
//last_y = current_y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
