<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCircle2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Properties
/// This object displaces the sprite index by a given displacement map
shader = shaDisplaceSprite;
switchTransparency = true;

// vertex format vars
drawAlpha = 1;
drawColor = c_white;

// shader vars
displacementSprite = sprWaterDisplaceNoise;
displacementSpriteIndex = 1;
textureDir = -45;
textureSpd = 0.2;
textureScale = 1; // larger = smaller scale
displacementDir = -135;
displacementDirDiff = 170; // for the second displacement texture
displacementSpd = 0.3;
displacementScale = 2;
distort = 0.05;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// shader references

uDisplacementMap = shader_get_sampler_index(shader, "uDisplacementMap");
uTime = shader_get_uniform(shader,"uTime");
uDistort = shader_get_uniform(shader,"uDistort");
uDisplacementDir = shader_get_uniform(shader,"uDisplacementDir");
uDisplacementSpd = shader_get_uniform(shader,"uDisplacementSpd");
uDisplacementScale = shader_get_uniform(shader,"uDisplacementScale");
uTextureDir = shader_get_uniform(shader,"uTextureDir");
uTextureSpd = shader_get_uniform(shader,"uTextureSpd");
uTextureScale = shader_get_uniform(shader,"uTextureScale");
uDisplacementDirDiff = shader_get_uniform(shader,"uDisplacementDirDiff");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// set shader variables

var cam = objCamera;
if(switchTransparency)
    drawAlpha = EaseOutSine(cam.camera_pitch-cam.camera_pitch_min,
                            0.2,
                            1,
                            cam.camera_pitch_max-cam.camera_pitch_min);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw texture
texture_set_interpolation(true);
//texture_set_repeat(true);
shader_set(shader);

texture_set_stage(uDisplacementMap, sprite_get_texture(displacementSprite, displacementSpriteIndex));
shader_set_uniform_f(uTime, global.total_t/1000000 /10);
shader_set_uniform_f(uDistort, distort);
shader_set_uniform_f(uDisplacementDir, displacementDir);
shader_set_uniform_f(uDisplacementSpd, displacementSpd);
shader_set_uniform_f(uDisplacementScale, displacementScale);
shader_set_uniform_f(uTextureDir, textureDir);
shader_set_uniform_f(uTextureSpd, textureSpd);
shader_set_uniform_f(uTextureScale, textureScale);
shader_set_uniform_f(uDisplacementDirDiff, displacementDirDiff);

image_alpha = drawAlpha;
draw_self();

shader_reset();
texture_set_interpolation(false);
texture_set_repeat(false);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// old draw
/*
//Draw event:
shader_set(shaCellularNoiseOld);
shader_set_uniform_f(shader_get_uniform(shaCellularNoiseOld, "dimensions"), window_get_width(), window_get_height());
draw_primitive_begin(pr_trianglestrip);
draw_vertex(-1, -1);
draw_vertex(1, -1);
draw_vertex(-1, 1);
draw_vertex(1, 1);
draw_primitive_end();
shader_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
