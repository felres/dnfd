<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPixelWhite</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Modify this variables after calling particle_create()
destroy_at_anim_end = false;
destroy_at_alpha_more_than_1 = false;
destroy_at_alpha_less_than_0 = false;
destroy_at_outside_view = false;
destroy_at_alarm_0 = true;
destroy_at_distance_from_point = false;
destroy_at_distance_from_point_x = 0;
destroy_at_distance_from_point_y = 0;
destroy_at_distance_from_point_min_distance = 0;
move_speed = 0;
move_direction = 0;
angle_speed = 0;
alpha_speed = 0;
scale_speed = 0;
color_target = c_white;
blend_speed = 0;
text = "";
draw_regular = true;
can_draw_arrow = 0;
draw_arrow_x1 = 0;
draw_arrow_y1 = 0;
draw_arrow_x2 = 0;
draw_arrow_y2 = 0;
draw_arrow_size = 0;
draw_gui = false;

// internal
GUIx = 0;
GUIy = 0;

// script to execute before destroyed
execute_on_destroy = noone;
for(var i = 0; i &lt; 15; i++) {execute_args[i] = noone;}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///tmc_dt_instance_init();
tmc_dt_instance_init();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// execute_on_destroy
if( (execute_on_destroy!=noone)&amp;&amp;script_exists(execute_on_destroy) )
    script_execute(execute_on_destroy,
                    execute_args[00],
                    execute_args[01],
                    execute_args[02],
                    execute_args[03],
                    execute_args[04],
                    execute_args[05],
                    execute_args[06],
                    execute_args[07],
                    execute_args[08],
                    execute_args[09],
                    execute_args[10],
                    execute_args[11],
                    execute_args[12],
                    execute_args[13],
                    execute_args[14],
                    );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// destroy condition
if destroy_at_alarm_0
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// destroy conditions

if destroy_at_alpha_more_than_1 &amp;&amp; (image_alpha&gt;1)
    instance_destroy();

if destroy_at_alpha_less_than_0 &amp;&amp; (image_alpha&lt;0)
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// move particle

var dt = global.tmc_dt_delta_t;

tmc_dt_set_direction( move_direction );
tmc_dt_set_speed( move_speed );
set_scale(image_xscale + scale_speed * (room_speed*dt));
image_angle += angle_speed * (room_speed*dt);
image_blend = approach(image_blend, color_target, blend_speed * (room_speed*dt));
image_alpha += alpha_speed * (room_speed*dt);

tmc_dt_step_full();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if destroy_at_outside_view
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// destroy condition
if destroy_at_anim_end
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// GUI Drawing

if(!draw_gui) exit;

set_drawgui_coords();

draw_sprite_ext(sprite_index,
                dt_image_index,
                GUIx,
                GUIy,
                image_xscale,
                image_yscale,
                image_angle,
                image_blend,
                image_alpha);
                
draw_set(1, c_white, fnt_mono);
draw_text(GUIx, GUIx, text);

if(can_draw_arrow)
{
    
    draw_set(image_alpha, image_blend);
    draw_arrow( room_to_drawgui_x(draw_arrow_x1, draw_arrow_y1),
                room_to_drawgui_y(draw_arrow_x1, draw_arrow_y1),
                room_to_drawgui_x(draw_arrow_x2, draw_arrow_y2),
                room_to_drawgui_y(draw_arrow_x2, draw_arrow_y2),
                draw_arrow_size);
}

draw_set();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Drawing

if(!draw_regular) exit;

draw_sprite_ext(sprite_index,
                dt_image_index,
                x,
                y,
                image_xscale,
                image_yscale,
                image_angle,
                image_blend,
                image_alpha);
                
draw_set(1, c_white, fnt_mono);
draw_text(x, y, text);

if(can_draw_arrow)
{
    draw_set(image_alpha, image_blend);
    draw_arrow(draw_arrow_x1,
                draw_arrow_y1,
                draw_arrow_x2,
                draw_arrow_y2,
                draw_arrow_size);
}

draw_set();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
